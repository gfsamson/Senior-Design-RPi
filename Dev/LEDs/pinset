#!/usr/bin/env python

import time
import os
import argparse
import traceback

import RPi.GPIO as GPIO

def main(args):
    if not args.pin_num:
        print("No pin selected")
        exit(1)
    else:
        print("Selected BOARD pin number: {0}".format(args.pin_num))
        GPIO.setmode(GPIO.BOARD)
        print("Setting to value: {0}".format(args.pin_set))
        pin_set_val = GPIO.LOW
        channel = int(args.pin_num)
        if args.pin_set == '1':
            pin_set_val = GPIO.HIGH
        GPIO.setup(channel, GPIO.OUT, initial=pin_set_val)
        raw_input('Press <ENTER> to continue')

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Sets a GPIO to either be On (1) or Off (0), and holds until Enter is pressed. On (HIGH) is associated with 3.3v, and Off (LOW) should be GND voltage.")
    parser.add_argument('--pin', '-p', help="Pin number, specifically in BOARD mode (Pin# on diagram)", dest="pin_num", action="store", required=True)
    parser.add_argument('--val', '-v', help="Either 0 (LOW) or 1 (HIGH)", dest="pin_set", action="store", required=True)
    args = parser.parse_args()
    try:
        main(args)
    except KeyboardInterrupt as kex:    # Detects Ctrl-C.
        print("Stopping! Detected you wanted to cancel..")
    except Exception as ex:
        print("Unknown exception caught! Here are the details:")
        print("------------------------------")
        print("{0}".format(traceback.format_exc()))
        print("------------------------------")
    finally:
        print("Cleaning up and closing..")
        GPIO.cleanup()                  # unsets the "setmode" and "setup" function calls from above.

